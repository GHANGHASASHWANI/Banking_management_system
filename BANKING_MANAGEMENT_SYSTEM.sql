CREATE DATABASE BANKING_MANAGEMENT_SYSTEM;

USE BANKING_MANAGEMENT_SYSTEM;

CREATE TABLE ACCOUNT_OPENING_FORM(
	ID INT IDENTITY PRIMARY KEY,
	[DATE] DATE DEFAULT GETDATE(),
	ACCOUNT_TYPE VARCHAR(20) DEFAULT 'SAVINGS',
	ACCOUNT_HOLDER_NAME VARCHAR(20),
	DOB DATE,
	AADHAR_NUMBER VARCHAR(12) UNIQUE,
	MOBILE_NUMBER VARCHAR(15) UNIQUE,
	ACCOUNT_OPENING_BALANCE DECIMAL(10,2) CHECK(ACCOUNT_OPENING_BALANCE > 1000),
	KYC_STATUS VARCHAR(20) DEFAULT 'PENDING'
);

CREATE TABLE BANK(
	ACCOUNT_NUMBER BIGINT PRIMARY KEY IDENTITY(1000001,1),
	ACCOUNT_TYPE VARCHAR(20),
	CURRENT_BALANCE DECIMAL(10,2)
);

CREATE TABLE ACCOUNT_HOLDER_DETAILS(
	ACCOUNT_NUMBER BIGINT PRIMARY KEY IDENTITY(1000001,1),
	ACCOUNT_HOLDER_NAME VARCHAR(20),
	DOB DATE,
	AADHAR_NUMBER VARCHAR(20),
	MOBILE_NUMBER VARCHAR(15)
	FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES BANK(ACCOUNT_NUMBER)
);

CREATE TABLE TRANSACTION_DETAILS(
	ACCOUNT_NUMBER BIGINT ,
	PAYMENT_TYPE VARCHAR(20),
	TRANSACTION_AMOUNT DECIMAL(10, 2),
	DATE_OF_TRANSACTION DATE
	FOREIGN KEY (ACCOUNT_NUMBER) REFERENCES BANK(ACCOUNT_NUMBER)
);

DROP TABLE BANK;
DROP TABLE ACCOUNT_HOLDER_DETAILS;
DROP TABLE TRANSACTION_DETAILS;

CREATE TRIGGER TR_APPROVED_KYC ON ACCOUNT_OPENING_FORM
AFTER UPDATE 
AS
BEGIN
	DECLARE @STATUS VARCHAR(20), @ACCOUNT_TYPE VARCHAR(20), @ACCOUNT_HOLDERNAME VARCHAR(20), @DOB DATE, @AADHARNUMBER VARCHAR(20)
	, @MOBILENUMBER VARCHAR(15), @ACCOUNT_OPENING_BALANCE DECIMAL(10,2)

	SELECT @STATUS = KYC_STATUS, @ACCOUNT_TYPE = ACCOUNT_TYPE, @ACCOUNT_HOLDERNAME = ACCOUNT_HOLDER_NAME, @DOB = DOB, @AADHARNUMBER = AADHAR_NUMBER,
	@MOBILENUMBER = MOBILE_NUMBER, @ACCOUNT_OPENING_BALANCE = ACCOUNT_OPENING_BALANCE  FROM INSERTED;

	IF(@STATUS = 'APPROVED')

	INSERT INTO BANK(ACCOUNT_TYPE, CURRENT_BALANCE) 
	VALUES 
	(@ACCOUNT_TYPE, @ACCOUNT_OPENING_BALANCE);

	INSERT INTO ACCOUNT_HOLDER_DETAILS (ACCOUNT_HOLDER_NAME, DOB, AADHAR_NUMBER, MOBILE_NUMBER)
	VALUES
	(@ACCOUNT_HOLDERNAME, @DOB, @AADHARNUMBER, @MOBILENUMBER);
	
END;


ALTER TRIGGER TR_TRANSACTION ON TRANSACTION_DETAILS
AFTER INSERT
AS
BEGIN
	DECLARE @CURRENT_AMOUNT DECIMAL(10,2), @STATUS VARCHAR(20), @ACCOUNT_NUMBER BIGINT;

	SELECT @CURRENT_AMOUNT = TRANSACTION_AMOUNT, @STATUS = PAYMENT_TYPE, @ACCOUNT_NUMBER = ACCOUNT_NUMBER FROM INSERTED;

	IF(@STATUS = 'DEBIT')
	UPDATE BANK
	SET CURRENT_BALANCE = CURRENT_BALANCE - @CURRENT_AMOUNT
	WHERE BANK.ACCOUNT_NUMBER = @ACCOUNT_NUMBER;

	IF(@STATUS = 'CREDIT')
	UPDATE BANK
	SET CURRENT_BALANCE = CURRENT_BALANCE + @CURRENT_AMOUNT
	WHERE BANK.ACCOUNT_NUMBER = @ACCOUNT_NUMBER

END;


CREATE PROCEDURE SP_LOG_TRANSACTION
AS
BEGIN
	SELECT * FROM TRANSACTION_DETAILS
	WHERE DATE_OF_TRANSACTION <= DATEADD(MONTH, 4, GETDATE());
END;


INSERT INTO ACCOUNT_OPENING_FORM (ACCOUNT_TYPE, ACCOUNT_HOLDER_NAME, DOB, AADHAR_NUMBER, MOBILE_NUMBER, ACCOUNT_OPENING_BALANCE)
VALUES 
('SAVINGS', 'Ashwani Kumar', '2004-08-22', '123456789012', '9876543210', 5000.00),
('CURRENT', 'Rohan Sharma', '1990-05-15', '234567890123', '9876543211', 15000.00),
('SAVINGS', 'Priya Mehta', '1995-03-10', '345678901234', '9876543212', 8000.00),
('CURRENT', 'Sanjay Gupta', '1985-12-25', '456789012345', '9876543213', 20000.00),
('SAVINGS', 'Neha Verma', '2000-07-05', '567890123456', '9876543214', 6000.00),
('SAVINGS', 'Amit Singh', '1998-11-18', '678901234567', '9876543215', 7000.00),
('CURRENT', 'Anjali Jain', '1987-04-09', '789012345678', '9876543216', 25000.00),
('SAVINGS', 'Karan Malhotra', '1992-01-30', '890123456789', '9876543217', 9000.00),
('CURRENT', 'Ritika Arora', '1993-09-12', '901234567890', '9876543218', 30000.00),
('SAVINGS', 'Manoj Kumar', '1980-06-20', '012345678901', '9876543219', 4000.00);

SELECT * FROM ACCOUNT_OPENING_FORM;

SELECT * FROM BANK;

SELECT * FROM ACCOUNT_HOLDER_DETAILS;

SELECT * FROM TRANSACTION_DETAILS;

UPDATE ACCOUNT_OPENING_FORM
SET KYC_STATUS = 'APPROVED'
WHERE ACCOUNT_HOLDER_NAME = 'Ashwani Kumar';


INSERT INTO TRANSACTION_DETAILS (ACCOUNT_NUMBER, PAYMENT_TYPE, TRANSACTION_AMOUNT, DATE_OF_TRANSACTION)
VALUES 
(1000001, 'DEBIT', 2000.00, '2025-01-01');

EXEC SP_LOG_TRANSACTION;
